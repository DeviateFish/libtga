{"version":3,"sources":["src/libtga.js"],"names":[],"mappings":"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","file":"src/libtga.js","sourcesContent":["/* libtga main */\n\nconst HEADER_SIZE = 18;\n\n// image types: is bitfield-ish\nconst IMAGE_TYPE_NONE = 0|0;\nconst IMAGE_TYPE_COLORMAPPED = 1|0;\nconst IMAGE_TYPE_TRUECOLOR = 2|0;\nconst IMAGE_TYPE_GREYSCALE = 3|0;\n\n// compression flag:\nconst IMAGE_RUNLENGTH_ENCODED = 0x8|0;\n\n// color maps (documented on wikipedia; but not in the spec?):\n/*const COLOR_MAP_NONE = 0|0;\nconst COLOR_MAP_EXISTS = 1|0;\nconst COLOR_MAP_TRUEVISION_START = 2|0;\nconst COLOR_MAP_TRUEVISION_END = 127|0;\nconst COLOR_MAP_DEV_START = 128|0;\nconst COLOR_MAP_DEV_END = 255|0;*/\n\n// image descriptor constants:\nconst IMAGE_DESCRIPTOR_ATTRIBUTE_MASK = 0xf;\nconst IMAGE_DESCRIPTOR_ORIGIN_MASK = 0x30;\nconst IMAGE_DESCRIPTOR_INTERLEAVE_MASK = 0xc0;\n\n// Origin values:\nconst IMAGE_ORIGIN_VERTICAL_MASK = 0x02;\nconst IMAGE_ORIGIN_HORIZONTAL_MASK = 0x01;\nconst IMAGE_ORIGIN_TOP = 0x02;\nconst IMAGE_ORIGIN_RIGHT = 0x01;\n\nclass TGA {\n\n  constructor(arraybuf)\n  {\n    this.dataview = new DataView(arraybuf);\n    this.header = TGA.readHeader(this.dataview);\n    this.width = this.header.imageSpec.width;\n    this.height = this.header.imageSpec.height;\n    this.compressed = !!(this.header.imageType & IMAGE_RUNLENGTH_ENCODED);\n    this.imageId = TGA.readImageId(this.dataview, this.header);\n    this.colorMap = TGA.readColorMap(this.dataview, this.header);\n    this.imageData = TGA.readImage(this);\n  }\n}\n\n// add constant refs here:\nTGA.HEADER_SIZE = HEADER_SIZE;\nTGA.IMAGE_TYPE_NONE = IMAGE_TYPE_NONE;\nTGA.IMAGE_TYPE_COLORMAPPED = IMAGE_TYPE_COLORMAPPED;\nTGA.IMAGE_TYPE_TRUECOLOR = IMAGE_TYPE_TRUECOLOR;\nTGA.IMAGE_TYPE_GREYSCALE = IMAGE_TYPE_GREYSCALE;\nTGA.IMAGE_RUNLENGTH_ENCODED = IMAGE_RUNLENGTH_ENCODED;\n\n// Utility functions don't really need to be in the prototype?\n// Utility functions:\nTGA.readHeader = function(dataview)\n{\n  var header = {\n    idLength: dataview.getUint8(0, true),\n    mapType: dataview.getUint8(1, true),\n    imageType: dataview.getUint8(2, true),\n    colorMapSpec: TGA.readColorMapSpec(dataview, 3),\n    imageSpec: TGA.readImageSpec(dataview, 8)\n  };\n  return header;\n};\n\nTGA.readColorMapSpec = function(dataview, offset)\n{\n  var bits = dataview.getUint8(offset+4, true);\n  var colorMapSpec = {\n    firstEntry: dataview.getUint16(offset, true),\n    length: dataview.getUint16(offset+2, true),\n    entrySizeBits: bits,\n    entrySizeBytes: Math.floor((bits + 7) / 8)\n  };\n  return colorMapSpec;\n};\n\nTGA.readImageSpec = function(dataview, offset)\n{\n  var descriptor = dataview.getUint8(offset+9);\n  var imageSpec = {\n    xOrigin: dataview.getUint16(offset, true),\n    yOrigin: dataview.getUint16(offset+2, true),\n    width: dataview.getUint16(offset+4, true),\n    height: dataview.getUint16(offset+6, true),\n    pixelDepth: dataview.getUint8(offset+8),\n    descriptor: descriptor,\n    attributeBits: descriptor & IMAGE_DESCRIPTOR_ATTRIBUTE_MASK,\n    origin: (descriptor & IMAGE_DESCRIPTOR_ORIGIN_MASK) >> 4,\n    interleave: (descriptor & IMAGE_DESCRIPTOR_INTERLEAVE_MASK) >> 6\n  };\n  return imageSpec;\n};\n\nTGA.readImageId = function(dataview, header)\n{\n  return new Uint8Array(dataview.buffer, HEADER_SIZE, header.idLength);\n};\n\nTGA.readColorMap = function(dataview, header)\n{\n  if(header.colorMapSpec.length <= 0)\n  {\n    return null;\n  }\n  var colorMap = new Uint8ClampedArray(header.colorMapSpec.length * 4),\n    read = null,\n    offset = HEADER_SIZE + header.idLength;\n\n  switch(header.colorMapSpec.entrySizeBits) {\n    case 8:\n      read = TGA.readPixel8;\n      break;\n    case 16:\n      read = TGA.readPixel15;\n      break;\n    case 15:\n      read = TGA.readPixel16;\n      break;\n    case 24:\n      read = TGA.readPixel24;\n      break;\n    case 32:\n      read = TGA.readPixel32;\n      break;\n    default:\n      throw 'Unsupported pixel depth';\n  }\n\n  for(var i = 0; i < header.colorMapSpec.length; i++)\n  {\n    read(dataview, offset, i, colorMap, i);\n  }\n\n  return colorMap;\n};\n\nTGA.readPixel8 = function(input, offset, i, output, j)\n{\n  var byte = input.getUint8(offset + i);\n  output[j * 4 + 2] = byte; // blue\n  output[j * 4 + 1] = byte; // green\n  output[j * 4 + 0] = byte; // red\n  output[j * 4 + 3] = 255; // alpha\n};\n\nTGA.readPixel15 = function(input, offset, i, output, j)\n{\n  var chunk = input.getUint16(offset + (i * 2), true);\n  output[j * 4 + 2] = (chunk & 0x1f) << 3; // blue\n  output[j * 4 + 1] = ((chunk >> 5) & 0x1f) << 3; // green\n  output[j * 4 + 0] = ((chunk >> 10) & 0x1f) << 3; // red\n  output[j * 4 + 3] = 255; // alpha\n};\n\nTGA.readPixel16 = function(input, offset, i, output, j)\n{\n  var chunk = input.getUint16(offset + (i * 2), true);\n  output[j * 4 + 2] = (chunk & 0x1f) << 3; // blue\n  output[j * 4 + 1] = ((chunk >> 5) & 0x1f) << 3; // green\n  output[j * 4 + 0] = ((chunk >> 10) & 0x1f) << 3; // red\n  output[j * 4 + 3] = (chunk & 0x80) == 0x80 ? 255 : 0; // alpha\n};\n\nTGA.readPixel24 = function(input, offset, i, output, j)\n{\n  output[j * 4 + 2] = input.getUint8(offset + (i * 3) + 0); //blue\n  output[j * 4 + 1] = input.getUint8(offset + (i * 3) + 1); //green\n  output[j * 4 + 0] = input.getUint8(offset + (i * 3) + 2); //red\n  output[j * 4 + 3] = 255;\n};\n\nTGA.readPixel32 = function(input, offset, i, output, j)\n{\n  output[j * 4 + 2] = input.getUint8(offset + (i * 4) + 0); //blue\n  output[j * 4 + 1] = input.getUint8(offset + (i * 4) + 1); //green\n  output[j * 4 + 0] = input.getUint8(offset + (i * 4) + 2); //red\n  output[j * 4 + 3] = 255;//input.getUint8(offset + (i * 4) + 3); // alpha\n};\n\nTGA.readMappedPixel8 = function(input, map, mapOffset, offset, i, output, j)\n{\n  var index = input.getUint8(offset + i) + mapOffset;\n  output[j * 4 + 0] = map[index * 4 + 0]; // blue\n  output[j * 4 + 1] = map[index * 4 + 1]; // green\n  output[j * 4 + 2] = map[index * 4 + 2]; // red\n  output[j * 4 + 3] = map[index * 4 + 3]; // alpha\n};\n\n// not sure these need to be separate functions...\nTGA.readMappedPixel15 = function(input, map, mapOffset, offset, i, output, j)\n{\n  var index = input.getUint16(offset + (i * 2), true) + mapOffset;\n  output[j * 4 + 0] = map[index * 4 + 0]; // blue\n  output[j * 4 + 1] = map[index * 4 + 1]; // green\n  output[j * 4 + 2] = map[index * 4 + 2]; // red\n  output[j * 4 + 3] = map[index * 4 + 3]; // alpha\n};\n\nTGA.readMappedPixel16 = function(input, map, mapOffset, offset, i, output, j)\n{\n  var index = input.getUint16(offset + (i * 2), true) + mapOffset;\n  output[j * 4 + 0] = map[index * 4 + 0]; // blue\n  output[j * 4 + 1] = map[index * 4 + 1]; // green\n  output[j * 4 + 2] = map[index * 4 + 2]; // red\n  output[j * 4 + 3] = map[index * 4 + 3]; // alpha\n};\n\n// is this even valid?\nTGA.readMappedPixel24 = function(input, map, mapOffset, offset, i, output, j)\n{\n  var index = input.getUint16(offset + (i * 2), true) + mapOffset; // uhhhhh\n  output[j * 4 + 0] = map[index * 4 + 0]; // blue\n  output[j * 4 + 1] = map[index * 4 + 1]; // green\n  output[j * 4 + 2] = map[index * 4 + 2]; // red\n  output[j * 4 + 3] = map[index * 4 + 3]; // alpha\n};\n\n// is this even valid, either?\nTGA.readMappedPixel32 = function(input, map, mapOffset, offset, i, output, j)\n{\n  var index = input.getUint16(offset + (i * 2), true) + mapOffset; // uhhhhh\n  output[j * 4 + 0] = map[index * 4 + 0]; // blue\n  output[j * 4 + 1] = map[index * 4 + 1]; // green\n  output[j * 4 + 2] = map[index * 4 + 2]; // red\n  output[j * 4 + 3] = map[index * 4 + 3]; // alpha\n};\n\nTGA.readRLEImage = function(/*tga*/)\n{\n  throw 'NYI';\n};\n\nTGA.readColormappedImage = function(tga)\n{\n  var dataview = tga.dataview,\n    header = tga.header,\n    colorMap = tga.colorMap,\n    width = header.imageSpec.width,\n    height = header.imageSpec.height,\n    pixels = new Uint8ClampedArray(width * height * 4),\n    pixelDepth = header.imageSpec.pixelDepth,\n    offset = HEADER_SIZE + header.idLength +\n      (header.colorMapSpec.length * header.colorMapSpec.entrySizeBytes),\n    mapOffset = header.colorMapSpec.firstEntry,\n    read = null,\n    vScanDir = (header.imageSpec.origin & IMAGE_ORIGIN_VERTICAL_MASK) === IMAGE_ORIGIN_TOP ? 1 : -1,\n    hScanDir = (header.imageSpec.origin & IMAGE_ORIGIN_HORIZONTAL_MASK) === IMAGE_ORIGIN_RIGHT ? -1 : 1;\n\n  if(!colorMap)\n  {\n    throw 'Image is described as color-mapped, but has no map';\n  }\n\n  switch(pixelDepth) {\n    case 8:\n      read = TGA.readMappedPixel8;\n      break;\n    case 16:\n      read = TGA.readMappedPixel15;\n      break;\n    case 15:\n      read = TGA.readMappedPixel16;\n      break;\n    case 24:\n      read = TGA.readMappedPixel24;\n      break;\n    case 32:\n      read = TGA.readMappedPixel32;\n      break;\n    default:\n      throw 'Unsupported pixel depth';\n  }\n\n  var vStart, vEnd, hStart, hEnd;\n  if(vScanDir > 0)\n  {\n    vStart = 0;\n    vEnd = height;\n  }\n  else\n  {\n    vStart = height - 1;\n    vEnd = -1;\n  }\n\n  if(hScanDir > 0)\n  {\n    hStart = 0;\n    hEnd = width;\n  }\n  else\n  {\n    hStart = width - 1;\n    hEnd = -1;\n  }\n\n  // output is always top->bottom, left->right, so:\n  var row = 0, col;\n  for(var i = vStart; i != vEnd; i += vScanDir)\n  {\n    col = 0;\n    for(var j = hStart; j != hEnd; j += hScanDir)\n    {\n      read(dataview, colorMap, mapOffset, offset, i * width + j, pixels, row * width + col++);\n    }\n    row++;\n  }\n\n  return pixels;\n};\n\nTGA.readTruecolorImage = function(tga)\n{\n  var header = tga.header,\n    dataview = tga.dataview,\n    width = header.imageSpec.width,\n    height = header.imageSpec.height,\n    pixels = new Uint8ClampedArray(width * height * 4),\n    pixelDepth = header.imageSpec.pixelDepth,\n    offset = HEADER_SIZE + header.idLength +\n      (header.colorMapSpec.length * header.colorMapSpec.entrySizeBytes),\n    read = null,\n    vScanDir = (header.imageSpec.origin & IMAGE_ORIGIN_VERTICAL_MASK) === IMAGE_ORIGIN_TOP ? 1 : -1,\n    hScanDir = (header.imageSpec.origin & IMAGE_ORIGIN_HORIZONTAL_MASK) === IMAGE_ORIGIN_RIGHT ? -1 : 1;\n\n  switch(pixelDepth) {\n    case 8:\n      read = TGA.readPixel8;\n      break;\n    case 16:\n      read = TGA.readPixel15;\n      break;\n    case 15:\n      read = TGA.readPixel16;\n      break;\n    case 24:\n      read = TGA.readPixel24;\n      break;\n    case 32:\n      read = TGA.readPixel32;\n      break;\n    default:\n      throw 'Unsupported pixel depth';\n  }\n  var vStart, vEnd, hStart, hEnd;\n  if(vScanDir > 0)\n  {\n    vStart = 0;\n    vEnd = height;\n  }\n  else\n  {\n    vStart = height - 1;\n    vEnd = -1;\n  }\n\n  if(hScanDir > 0)\n  {\n    hStart = 0;\n    hEnd = width;\n  }\n  else\n  {\n    hStart = width - 1;\n    hEnd = -1;\n  }\n\n  // output is always top->bottom, left->right, so:\n  var row = 0, col;\n  for(var i = vStart; i != vEnd; i += vScanDir)\n  {\n    col = 0;\n    for(var j = hStart; j != hEnd; j += hScanDir)\n    {\n      read(dataview, offset, i * width + j, pixels, row * width + col++);\n    }\n    row++;\n  }\n\n  return pixels;\n};\n\nTGA.readImage = function(tga)\n{\n  if(tga.header.compressed)\n  {\n    return TGA.readRLEImage(tga);\n  }\n  else\n  {\n    if(tga.header.mapType === 0) // not color mapped:\n    {\n      return TGA.readTruecolorImage(tga);\n    }\n    else if(tga.header.mapType === 1) // color mapped\n    {\n      return TGA.readColormappedImage(tga);\n    }\n    else\n    {\n      throw 'Unsupported map type';\n    }\n  }\n};\n\n// Base function.\nvar libtga = {\n  readFile: function(arraybuf) {\n    return new TGA(arraybuf);\n  },\n  loadFile: function(url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function() {\n      callback(null, new TGA(this.response));\n    };\n    xhr.onerror = function(e) {\n      callback(e, null);\n    };\n\n    xhr.send();\n  },\n  TGA: TGA,\n  VERSION: '0.3.1'\n};\n\nexport default libtga;\n"]}